package com.xpu.school_guide.pojo;

import java.util.ArrayList;
import java.util.List;

public class GroupsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public GroupsExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGroupNameIsNull() {
            addCriterion("group_name is null");
            return (Criteria) this;
        }

        public Criteria andGroupNameIsNotNull() {
            addCriterion("group_name is not null");
            return (Criteria) this;
        }

        public Criteria andGroupNameEqualTo(String value) {
            addCriterion("group_name =", value, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameNotEqualTo(String value) {
            addCriterion("group_name <>", value, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameGreaterThan(String value) {
            addCriterion("group_name >", value, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameGreaterThanOrEqualTo(String value) {
            addCriterion("group_name >=", value, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameLessThan(String value) {
            addCriterion("group_name <", value, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameLessThanOrEqualTo(String value) {
            addCriterion("group_name <=", value, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameLike(String value) {
            addCriterion("group_name like", value, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameNotLike(String value) {
            addCriterion("group_name not like", value, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameIn(List<String> values) {
            addCriterion("group_name in", values, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameNotIn(List<String> values) {
            addCriterion("group_name not in", values, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameBetween(String value1, String value2) {
            addCriterion("group_name between", value1, value2, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupNameNotBetween(String value1, String value2) {
            addCriterion("group_name not between", value1, value2, "groupName");
            return (Criteria) this;
        }

        public Criteria andGroupTextIsNull() {
            addCriterion("group_text is null");
            return (Criteria) this;
        }

        public Criteria andGroupTextIsNotNull() {
            addCriterion("group_text is not null");
            return (Criteria) this;
        }

        public Criteria andGroupTextEqualTo(String value) {
            addCriterion("group_text =", value, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextNotEqualTo(String value) {
            addCriterion("group_text <>", value, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextGreaterThan(String value) {
            addCriterion("group_text >", value, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextGreaterThanOrEqualTo(String value) {
            addCriterion("group_text >=", value, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextLessThan(String value) {
            addCriterion("group_text <", value, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextLessThanOrEqualTo(String value) {
            addCriterion("group_text <=", value, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextLike(String value) {
            addCriterion("group_text like", value, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextNotLike(String value) {
            addCriterion("group_text not like", value, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextIn(List<String> values) {
            addCriterion("group_text in", values, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextNotIn(List<String> values) {
            addCriterion("group_text not in", values, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextBetween(String value1, String value2) {
            addCriterion("group_text between", value1, value2, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupTextNotBetween(String value1, String value2) {
            addCriterion("group_text not between", value1, value2, "groupText");
            return (Criteria) this;
        }

        public Criteria andGroupOrderIsNull() {
            addCriterion("group_order is null");
            return (Criteria) this;
        }

        public Criteria andGroupOrderIsNotNull() {
            addCriterion("group_order is not null");
            return (Criteria) this;
        }

        public Criteria andGroupOrderEqualTo(Integer value) {
            addCriterion("group_order =", value, "groupOrder");
            return (Criteria) this;
        }

        public Criteria andGroupOrderNotEqualTo(Integer value) {
            addCriterion("group_order <>", value, "groupOrder");
            return (Criteria) this;
        }

        public Criteria andGroupOrderGreaterThan(Integer value) {
            addCriterion("group_order >", value, "groupOrder");
            return (Criteria) this;
        }

        public Criteria andGroupOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("group_order >=", value, "groupOrder");
            return (Criteria) this;
        }

        public Criteria andGroupOrderLessThan(Integer value) {
            addCriterion("group_order <", value, "groupOrder");
            return (Criteria) this;
        }

        public Criteria andGroupOrderLessThanOrEqualTo(Integer value) {
            addCriterion("group_order <=", value, "groupOrder");
            return (Criteria) this;
        }

        public Criteria andGroupOrderIn(List<Integer> values) {
            addCriterion("group_order in", values, "groupOrder");
            return (Criteria) this;
        }

        public Criteria andGroupOrderNotIn(List<Integer> values) {
            addCriterion("group_order not in", values, "groupOrder");
            return (Criteria) this;
        }

        public Criteria andGroupOrderBetween(Integer value1, Integer value2) {
            addCriterion("group_order between", value1, value2, "groupOrder");
            return (Criteria) this;
        }

        public Criteria andGroupOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("group_order not between", value1, value2, "groupOrder");
            return (Criteria) this;
        }

        public Criteria andTasksIdIsNull() {
            addCriterion("tasks_id is null");
            return (Criteria) this;
        }

        public Criteria andTasksIdIsNotNull() {
            addCriterion("tasks_id is not null");
            return (Criteria) this;
        }

        public Criteria andTasksIdEqualTo(Integer value) {
            addCriterion("tasks_id =", value, "tasksId");
            return (Criteria) this;
        }

        public Criteria andTasksIdNotEqualTo(Integer value) {
            addCriterion("tasks_id <>", value, "tasksId");
            return (Criteria) this;
        }

        public Criteria andTasksIdGreaterThan(Integer value) {
            addCriterion("tasks_id >", value, "tasksId");
            return (Criteria) this;
        }

        public Criteria andTasksIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("tasks_id >=", value, "tasksId");
            return (Criteria) this;
        }

        public Criteria andTasksIdLessThan(Integer value) {
            addCriterion("tasks_id <", value, "tasksId");
            return (Criteria) this;
        }

        public Criteria andTasksIdLessThanOrEqualTo(Integer value) {
            addCriterion("tasks_id <=", value, "tasksId");
            return (Criteria) this;
        }

        public Criteria andTasksIdIn(List<Integer> values) {
            addCriterion("tasks_id in", values, "tasksId");
            return (Criteria) this;
        }

        public Criteria andTasksIdNotIn(List<Integer> values) {
            addCriterion("tasks_id not in", values, "tasksId");
            return (Criteria) this;
        }

        public Criteria andTasksIdBetween(Integer value1, Integer value2) {
            addCriterion("tasks_id between", value1, value2, "tasksId");
            return (Criteria) this;
        }

        public Criteria andTasksIdNotBetween(Integer value1, Integer value2) {
            addCriterion("tasks_id not between", value1, value2, "tasksId");
            return (Criteria) this;
        }

        public Criteria andSiteIdIsNull() {
            addCriterion("site_id is null");
            return (Criteria) this;
        }

        public Criteria andSiteIdIsNotNull() {
            addCriterion("site_id is not null");
            return (Criteria) this;
        }

        public Criteria andSiteIdEqualTo(Integer value) {
            addCriterion("site_id =", value, "siteId");
            return (Criteria) this;
        }

        public Criteria andSiteIdNotEqualTo(Integer value) {
            addCriterion("site_id <>", value, "siteId");
            return (Criteria) this;
        }

        public Criteria andSiteIdGreaterThan(Integer value) {
            addCriterion("site_id >", value, "siteId");
            return (Criteria) this;
        }

        public Criteria andSiteIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("site_id >=", value, "siteId");
            return (Criteria) this;
        }

        public Criteria andSiteIdLessThan(Integer value) {
            addCriterion("site_id <", value, "siteId");
            return (Criteria) this;
        }

        public Criteria andSiteIdLessThanOrEqualTo(Integer value) {
            addCriterion("site_id <=", value, "siteId");
            return (Criteria) this;
        }

        public Criteria andSiteIdIn(List<Integer> values) {
            addCriterion("site_id in", values, "siteId");
            return (Criteria) this;
        }

        public Criteria andSiteIdNotIn(List<Integer> values) {
            addCriterion("site_id not in", values, "siteId");
            return (Criteria) this;
        }

        public Criteria andSiteIdBetween(Integer value1, Integer value2) {
            addCriterion("site_id between", value1, value2, "siteId");
            return (Criteria) this;
        }

        public Criteria andSiteIdNotBetween(Integer value1, Integer value2) {
            addCriterion("site_id not between", value1, value2, "siteId");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNull() {
            addCriterion("is_delete is null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIsNotNull() {
            addCriterion("is_delete is not null");
            return (Criteria) this;
        }

        public Criteria andIsDeleteEqualTo(Boolean value) {
            addCriterion("is_delete =", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotEqualTo(Boolean value) {
            addCriterion("is_delete <>", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThan(Boolean value) {
            addCriterion("is_delete >", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_delete >=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThan(Boolean value) {
            addCriterion("is_delete <", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteLessThanOrEqualTo(Boolean value) {
            addCriterion("is_delete <=", value, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteIn(List<Boolean> values) {
            addCriterion("is_delete in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotIn(List<Boolean> values) {
            addCriterion("is_delete not in", values, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteBetween(Boolean value1, Boolean value2) {
            addCriterion("is_delete between", value1, value2, "isDelete");
            return (Criteria) this;
        }

        public Criteria andIsDeleteNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_delete not between", value1, value2, "isDelete");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table groups
     *
     * @mbg.generated do_not_delete_during_merge Fri May 15 18:48:25 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table groups
     *
     * @mbg.generated Fri May 15 18:48:25 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}